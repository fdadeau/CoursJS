
.playground {
    font-family: medium-content-sans-serif-font, 
        "Lucida Grande", "Lucida Sans Unicode", 
        "Lucida Sans", Geneva, Arial, sans-serif;    
    display: flex;
    flex-direction: row;
    flex-basis: auto;
    flex-flow: row;
    justify-content: space-evenly;
    align-items: flex-start;
    margin-top: 2vh;
    margin-bottom: 2vh;
    height: 97%;
}

/*
.playground textarea {
    width: 45vh;
    height: 20vh;
}
*/
.playground button[class^="btn"] {
    width: 4.5vmin;
    height: 4.5vmin;
    cursor: pointer;
    background-repeat: no-repeat;
    background-size: cover;
    background-origin: center;
}
.playground button.btnExecuter {
    background-image: url("../images/lire.png");   
}
.playground button.btnRecharger {
    background-image: url("../images/recharger.png");   
}
.playground button.btnAgrandir {
    background-image: url("../images/agrandir.png");   
}
.playground.fullsize button.btnAgrandir {
    background-image: url("../images/reduire.png");   
}

.playground.fullsize {
    background-color: white;
    position: fixed;
    margin: 0;
    padding: 20px;
    top: 0;
    left: 0;
    height: 100vh;
    width: 100vw;
    box-sizing: border-box;
    z-index: 100001;
}
.playground.fullsize .code {
    height: 97% !important;   
    width: 55vw;
}
.playground.fullsize .output {
    height: 97% !important;   
    width: 35vw;
}
.playground button:last-child {
    float: right;   
}


.playground > div {
    position: relative;   
}

.playground > div.code {
    border: solid 1px black;
    box-sizing: border-box;
    background-color: black;
}

.playground input[type="radio"] {
    position: absolute; 
    visibility: hidden;
}

.playground input[type="radio"] + label + div {
    position: absolute;
    overflow: hidden;
    width: 100%;
    height: calc(100% - 2vh);
    opacity: 0;
    transition: opacity 0.5s;
}
.playground input[type="radio"]:checked + label + div {
    opacity: 1;
    transition: opacity 0.5s linear 0.5s;
}

.playground label {
    border: solid 1px #000;
    width: 20%;
    box-sizing: content-box;
    margin: 0 !important;
    padding: 1vh 1vh;
    line-height: 2.2vh;
    height: 2vh;
    overflow: hidden;
    display: inline-block;
    background-color: black;
    color: white;
    font-size: 2vh;
    font-weight: bold;
}
.playground input[type="radio"]:checked + label {
    color: yellow;
}
.playground input[type="radio"]:checked + label::before {
    content: '\25BE\20';
}
.playground label::before {
    content: '\25B8\20';
}
.playground label:hover {
    cursor: pointer;
}

.CodeMirror {
    height: calc(100% - 4vh);
}
.CodeMirror-scroll {
    height: calc(100% - 4vh);
}
.portrait .CodeMirror-lines {
    font-size: 1.3vw;
    line-height: 1.6vw;
}
.CodeMirror-lines {
    font-size: 1.8vmin;
    line-height: 2.4vmin;
    background-color: #FEFEFE;
    background-image: linear-gradient(transparent 50%, rgba(62,142,209,0.04) 50%);
    background-size: 100% 4.8vmin;
    background-origin: content-box;
    background-attachment: local;
}

.playground .code, .playground .output {
    border: solid 1px #000;
    margin: 0;
    padding: 0;
    width: 45%;
    height: 52vh;
}
.playground.h20 {
    min-height: 20vh;   
}
.playground.h20 .code, .playground.h20 .output {
    height: 20vh;
}
.playground.h25 {
    min-height: 25vh;   
}
.playground.h25 .code, .playground.h25 .output {
    height: 25vh;
}
.playground.h30 {
    min-height: 30vh;   
}
.playground.h30 .code, .playground.h30 .output {
    height: 30vh;
}
.playground.h40 {
    min-height: 40vh;   
}
.playground.h40 .code, .playground.h40 .output {
    height: 40vh;
}
.playground.h50 {
    min-height: 50vh;   
}
.playground.h50 .code, .playground.h50 .output {
    height: 50vh;
}
.playground.h60 {
    min-height: 60vh;   
}
.playground.h60 .code, .playground.h60 .output {
    height: 60vh;
}

.playground.nooutput .code {
    width: 90%;
}
.playground .code > div {
    overflow: hidden !important;
}

.playground.nocode .code {
    display: none;
}
.playground.nocode button, .playground.nooutput button {
    display: none;
}

.playground .output {
    border: none;
    resize: both;
}
.playground.nooutput .output {
    display: none;
}

.playground.nohtml .html, .playground.nohtml [for^="forHTML"], .playground.nohtml [id^="forHTML"] {
    display: none;
}
.playground.nocss .css, .playground.nocss [for^="forCSS"], .playground.nocss [id^="forCSS"] {
    display: none;
}
.playground.nojs .js, .playground.nojs [for^="forJS"], .playground.nojs [id^="forJS"] {
    display: none;
}



.playground .output > iframe {
    width: calc(100% - 4vh);
    box-sizing: content-box;
    margin-top: 2vh;
    height: calc(100% - 6vh);
    border: solid 1px #000;
    resize: both;
    background-color: white;
    overflow: scroll;
}
.playground.noiframe .output > iframe {
    display: none;
}
.playground.nocode .output {
    width: 90%;
}
.playground button {
    padding: 0.5vh;
    width: 14vh;
    font-size: 1.5vh;
    text-align: center;
    border-radius: 1vh;
    background-color: black;
    color: white;
    margin: 0 3px;
}
.playground.nocontrols button {
    display: none;
}

.playground .output .console {
    display: none;
}
.portrait .playground.console .output .console {
    font-size: 1.3vw;   
}
.playground.console .output .console  {
    display: block;
    position: relative;
    border: solid 1px #000;
    margin-top: 2vh;
    height: calc(100% - 10vh);
    background-color: white;
    font-family: monospace;
    font-size: 1.8vh;
    padding: 1vh;
    line-height: 2.5vh;
    overflow: scroll;
}
.playground .console::before {
    content: 'console.log';
    position: absolute; 
    top: -2.5vh;
    left: -1vh;
}
.playground .console p {
    line-height: 1;
    margin: 0;
    padding: 0;
}
.playground .console p.log {
    color: blue;
}
.playground .console p.error {
    color: red;
}
.playground .console p.error .line {
    float: left;
    vertical-align: bottom;
    text-decoration: underline;
    margin-right: 0.5vh;
    font-size: 100%;
}
.playground .console p.error .line::before {
    content: 'Erreur ligne ';
}
.playground .console p.error .line::after {
    content: ':';
}


